package com.wipro.citi;

 

import org.apache.spark.sql.DataFrameReader;

import org.apache.spark.sql.Dataset;

import org.apache.spark.sql.Row;

import org.apache.spark.sql.RowFactory;

import org.apache.spark.sql.SparkSession;

import org.apache.spark.sql.types.DataTypes;

import org.apache.spark.sql.types.StructField;

import org.apache.spark.sql.types.StructType;

 

import java.util.Arrays;

import java.util.List;

 

import static org.apache.spark.sql.functions.col;

import org.apache.spark.sql.functions;

import org.apache.spark.sql.api.java.UDF1;

 

public class SparkMC {

 

                public static void main(String[] args) {

                                // TODO Auto-generated method stub

                                SparkSession spark = SparkSession

                                         .builder()

                                         .appName("DataFrame-FromRowsAndSchema")

                                         .master("local[1]")

                                         .getOrCreate();

                               

                                 String file_path = "/home/sujoy/Downloads/Demo.xlsx";

                                                               

                                 Dataset<Row> nDF = spark.read().format("com.crealytics.spark.excel").option("dataAddress", "'emp'!A1:B2").option("header", "true").load(file_path);

                                //customerDF.show();

                               

                                 spark.udf().register("add", add, DataTypes.DoubleType);

                               

                                 //spark.udf().register()

                               

                                 //ds.select(col("*"),callUDF("toUpper", col("col2"))).show();

                               

                                 //Dataset<Row> nDF = customerDF.select("Age");

                               

                                 Dataset<Row> mNDF = nDF.withColumn("Additional",functions.callUDF("add", nDF.col("Salary")));

                               

                                 mNDF.show();

                               

                }

 

                private static UDF1<String, String> toUpper = new UDF1<String, String>() {

                    public String call(final String str) throws Exception {

                        return str.toUpperCase();

                    }

                };

               

                private static UDF1<String, Double> add = new UDF1<String, Double>() {

                    public Double call(final String i) throws Exception {

                        return Double.valueOf(i)+233;

                    }

                };

               

               

               

}
